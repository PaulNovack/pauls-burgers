services:
    app:
        build:
            context: .
            dockerfile: Dockerfile.app
        container_name: laravel-app
        environment:
            APP_ENV: local
            APP_DEBUG: "true"
            APP_URL: http://localhost:8001
            # If you use your ASR service:
            # ASR_URL: http://asr:9000
            # If you prefer to inject APP_KEY here instead of .env:
            APP_KEY: base64:eBsC2QDEBJFQCtBAWVt9uyjgZ9hopi0chy+x1Qks0Jw=
        volumes:
        - ./:/var/www/html
        - ./.env:/var/www/html/.env:ro
        - ./storage:/var/www/html/storage
        - ./bootstrap/cache:/var/www/html/bootstrap/cache
        - ./database:/var/www/html/database        # <-- add this
        ports:
            - "8001:8001"
        restart: unless-stopped
        command: >
            sh -lc "
              # make sure the sqlite file exists
              mkdir -p database &&
              [ -f database/database.sqlite ] || touch database/database.sqlite &&

              # laravel needs write on these paths (for sqlite journals, caches, etc.)
              chown -R www-data:www-data storage bootstrap/cache database || true &&
              chmod -R ug+rwX storage bootstrap/cache database || true &&

              # optional: ensure app key
              php artisan key:generate --force || true &&

              # create sessions table if you plan to use DB sessions
              php artisan session:table || true &&

              # run migrations
              php artisan migrate --force &&

              # finally, start supervisor (keeps container running)
              exec /usr/bin/supervisord -n
            "
        # depends_on:
        #   - asr
    asr:
        build:
            context: ./asr-service            # directory with server.py, requirements.txt, Dockerfile (below)
            dockerfile: Dockerfile
        container_name: asr-service
        environment:
            ASR_MODEL: small                  # tiny | base | small | medium | large-v3
            ASR_DEVICE: cpu                   # cpu | cuda  (needs NVIDIA runtime for cuda)
            ASR_COMPUTE: int8                 # int8 | int8_float32 | float16 | float32
            ASR_LANG: en
        ports:
            - "9000:9000"                     # expose for local curl tests (optional)
        healthcheck:
            test: ["CMD", "wget", "-qO-", "http://127.0.0.1:9000/health"]
            interval: 30s
            timeout: 5s
            retries: 5
        restart: unless-stopped
